# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestLoginlogoutwithassertions():
  def setup_method(self, method):
    chrome_option = webdriver.ChromeOptions()
    chrome_option.add_argument("--headless")
    firefox_options = webdriver.FirefoxOptions()
    firefox_options.add_argument("--headless")
    edge_options = webdriver.EdgeOptions()
    edge_options.add_argument("--headless")
    drivers = [webdriver.Chrome(options=chrome_option), webdriver.Firefox(options=firefox_options), webdriver.Edge(options=edge_options)]
    self.driver = drivers[0]
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_loginlogoutwithassertions(self):
    # Test name: login / logout with assertions
    # Step # | name | target | value
    # 1 | open | https://usahockeytv.com/ |
    prod = "https://usahockeytv.com"
    dev = "https://stage.usah.visaic.tv/"
    self.driver.get(dev)
    # 2 | setWindowSize | 1505x577 | 
    self.driver.set_window_size(1505, 577)

    self.driver.implicitly_wait(30)
    # 3 | click | css=.nav-item:nth-child(6) > .nav-link | 
    self.driver.find_element(By.CSS_SELECTOR, ".nav-item:nth-child(6) > .nav-link").click()
    # 4 | click | css=.row:nth-child(1) > .form > .form-control | 
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(1) > .form > .form-control").click()
    # 5 | type | css=.row:nth-child(1) > .form > .form-control | jason@evntl.com
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(1) > .form > .form-control").send_keys("jason@evntl.com")
    # 6 | click | css=.row:nth-child(2) .form-control | 
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(2) .form-control").click()
    # 7 | type | css=.row:nth-child(2) .form-control | 11111111
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(2) .form-control").send_keys("11111111")
    # 8 | click | css=.btn | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    # 9 | assertElementPresent | id=navbarText | 
    elements = self.driver.find_elements(By.ID, "navbarText")
    assert len(elements) > 0
    # 10 | click | css=.nav-item:nth-child(6) > .nav-link | 
    self.driver.find_element(By.CSS_SELECTOR, ".nav-item:nth-child(6) > .nav-link").click()
    # 11 | assertElementPresent | id=navbarText | Login
    elements = self.driver.find_elements(By.ID, "navbarText")
    assert len(elements) > 0
  
